{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Yoback\\\\Nauka\\\\REACT\\\\Next.js\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.log(props);\n  console.log(props.meetupData);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail // image={props.meetupData.image}\n  , {\n    id: props.meetupData.id,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Yoback/Nauka/REACT/Next.js/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log","meetupData","id","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,sBACI,QAAC,YAAD,CACI;AADJ;AAEI,IAAA,EAAE,EAAEH,KAAK,CAACG,UAAN,CAAiBC,EAFzB;AAGI,IAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAH5B;AAII,IAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAJ9B;AAKI,IAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AALlC;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAZD;;KAAMR,a;;AAsDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetails = props => {\r\n    console.log(props);\r\n    console.log(props.meetupData);\r\n    return (\r\n        <MeetupDetail\r\n            // image={props.meetupData.image}\r\n            id={props.meetupData.id}\r\n            title={props.meetupData.title}\r\n            address={props.meetupData.address}\r\n            description={props.meetupData.description}\r\n        />\r\n    );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://***REMOVED***:***REMOVED***@cluster0.9v1xfdu.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } })),\r\n    };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://***REMOVED***:***REMOVED***@cluster0.9v1xfdu.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n    );\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: selectedMeetup,\r\n        },\r\n        revalidate: 10,\r\n    };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}